#####################################
#  This file is managed by puppet   #   
# Local changes WILL be overwritten #
#####################################

# passenger_use_global_queue can improve performance when
# the server is handling long-running requests
# http://blog.phusion.nl/2008/10/29/phusion-passenger-now-with-global-queuing/
passenger_use_global_queue      on;

# passenger_min_instances will ensure that no fewer than N
# application instances are kept 'alive' to handle requests
# http://www.modrails.com/documentation/Users%20guide%20Nginx.html#PassengerMinInstances
passenger_min_instances         15;

# Timeout until application instances are shutdown - default
# is 5 minutes (ie, 300 seconds) we're using 15 minutes (900
# seconds) - this is very conservative, making sure that we
# only shutdown instances during periods of low traffic
#
passenger_pool_idle_time        900;

# Maximum number of requests a worker can serve before it
# is shut down...  Why?  The documentation says it best:
#
# "The passenger_max_requests directive should be considered
# as a workaround for misbehaving applications. It is advised
# that you fix the problem in your application rather than
# relying on these directives as a measure to avoid memory
# leaks."
passenger_max_requests          10000;

passenger_max_pool_size         30;
passenger_root                  /home/ubuntu/.rvm/gems/ruby-1.9.3-p194@desk-rails3/gems/passenger-3.0.13;
passenger_ruby                  /var/assistly/shared/system/ruby_wrapper.sh;
#passenger_ruby                 /home/ubuntu/.rvm/wrappers/ruby-1.9.2-p318@rails3/ruby;

# Pre-start application instances during nginx start-up
passenger_pre_start             http://localhost/status;
